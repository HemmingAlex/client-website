{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hemming\\\\Documents\\\\GitHub\\\\webby\\\\src\\\\bot\\\\Debate\\\\Debate.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from \"react-dom\";\nimport Style from \"./debate.module.scss\";\nimport Condition from './Condition';\nimport Reason from './argg/Reason';\nlet a = \"if \";\nlet you = \"you \";\nlet keep = \"keep \";\nlet pressing = \"pressing \";\nlet will = \"will \";\nlet win = \"win \";\nlet q = 0; //if the property is not present then show this, else this\n// constructor bings the click to the clicked. and state = x\n\nclass Debate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: false\n    };\n    this.handleToggleClick = this.handleToggleClick.bind(this);\n  } // state = props, if click get rid of state\n\n\n  handleToggleClick() {\n    this.setState(state => ({\n      x: !state.x\n    }));\n  } /// in the props warn props becomes dependant ont he state.\n\n\n  render() {\n    const answers = [a, you, keep, pressing, you, will, win];\n    return this.state.x ? React.createElement(\"div\", {\n      className: `blockquote blockquote-info ${Style.max}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleToggleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"exit\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Reason, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: `blockquote blockquote-info ${Style.max}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      onClick: this.handleToggleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" enter\"));\n    ;\n  }\n\n}\n\nexport default Debate; // <div>pick the right answers to gain the prize! <br/> <br/> <br/>\n//         </div>\n// {answers[q]} <br/>\n//           <button onClick={this.handleToggleClick}>\n// this is \"\n//           </button>","map":{"version":3,"sources":["C:/Users/Hemming/Documents/GitHub/webby/src/bot/Debate/Debate.jsx"],"names":["React","Component","ReactDOM","Style","Condition","Reason","a","you","keep","pressing","will","win","q","Debate","constructor","props","state","x","handleToggleClick","bind","setState","render","answers","max"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAIA,IAAIC,CAAC,GAAG,KAAR;AACA,IAAIC,GAAG,GAAG,MAAV;AACA,IAAIC,IAAI,GAAG,OAAX;AACA,IAAIC,QAAQ,GAAG,WAAf;AAEA,IAAIC,IAAI,GAAG,OAAX;AACA,IAAIC,GAAG,GAAE,MAAT;AAGA,IAAIC,CAAC,GAAG,CAAR,C,CAIA;AAEE;;AACA,MAAMC,MAAN,SAAqBb,KAAK,CAACC,SAA3B,CAAqC;AACnCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,CAAC,EAAE;AAAJ,KAAb;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD,GALkC,CAMrC;;;AACED,EAAAA,iBAAiB,GAAI;AACnB,SAAKE,QAAL,CAAeJ,KAAK,KAAK;AACvBC,MAAAA,CAAC,EAAE,CAACD,KAAK,CAACC;AADa,KAAL,CAApB;AAGD,GAXkC,CAcrC;;;AAEEI,EAAAA,MAAM,GAAG;AAEP,UAAMC,OAAO,GAAG,CAAChB,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,QAAf,EAAyBF,GAAzB,EAA8BG,IAA9B,EAAoCC,GAApC,CAAhB;AAGA,WAAO,KAAKK,KAAL,CAAWC,CAAX,GACJ;AAAK,MAAA,SAAS,EAAG,8BAA6Bd,KAAK,CAACoB,GAAI,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQN;AAAQ,MAAA,OAAO,EAAE,KAAKL,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARM,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,CAVJ,CADI,GAkBP;AAAK,MAAA,SAAS,EAAG,8BAA6Bf,KAAK,CAACoB,GAAI,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA4D;AAAQ,MAAA,OAAO,EAAE,KAAKL,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5D,CAlBA;AAsBA;AACD;;AA5CkC;;AAgDrC,eAAeL,MAAf,C,CAED;AAGD;AAIA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport Style from \"./debate.module.scss\";\r\nimport Condition from './Condition';\r\nimport Reason from './argg/Reason';\r\n  \r\n\r\n\r\nlet a = \"if \";\r\nlet you = \"you \";\r\nlet keep = \"keep \";\r\nlet pressing = \"pressing \";\r\n\r\nlet will = \"will \";\r\nlet win= \"win \";\r\n\r\n\r\nlet q = 0;\r\n\r\n\r\n\r\n//if the property is not present then show this, else this\r\n\r\n  // constructor bings the click to the clicked. and state = x\r\n  class Debate extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {x: false};\r\n      this.handleToggleClick = this.handleToggleClick.bind(this);\r\n    }\r\n  // state = props, if click get rid of state\r\n    handleToggleClick()  { \r\n      this.setState( state => ({\r\n        x: !state.x\r\n      }));    \r\n    }\r\n\r\n    \r\n  /// in the props warn props becomes dependant ont he state.\r\n\r\n    render() {\r\n\r\n      const answers = [a, you, keep, pressing, you, will, win];\r\n\r\n\r\n      return this.state.x? (\r\n         <div className={`blockquote blockquote-info ${Style.max}`}>\r\n\r\n\r\n  {/* <Condition peng={this.handleToggleClick}/> */}\r\n\r\n\r\n\r\n\r\n   <button onClick={this.handleToggleClick}>\r\n     exit\r\n    </button><p>\r\n  <Reason/>\r\n   </p>\r\n\r\n        </div>\r\n      )\r\n      : (\r\n      <div className={`blockquote blockquote-info ${Style.max}`}> <button onClick={this.handleToggleClick}> enter</button></div>\r\n      );\r\n      \r\n      \r\n      ;\r\n    }\r\n  }\r\n\r\n\r\n  export default Debate;\r\n\r\n // <div>pick the right answers to gain the prize! <br/> <br/> <br/>\r\n\r\n        \r\n//         </div>\r\n\r\n\r\n          \r\n// {answers[q]} <br/>\r\n//           <button onClick={this.handleToggleClick}>\r\n// this is \"\r\n\r\n//           </button>"]},"metadata":{},"sourceType":"module"}